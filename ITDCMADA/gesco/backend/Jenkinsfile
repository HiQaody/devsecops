pipeline {
    agent any

    environment {
        CONTAINER_NAME    = 'gesco-backend'
        IMAGE_NAME        = 'gesco-backend'
        IMAGE_TAG         = "${BUILD_NUMBER}"

        // Variables PostgreSQL
        POSTGRES_USER     = credentials('DB_USER_ID')
        POSTGRES_PASSWORD = credentials('DB_PASSWORD_ID')
        POSTGRES_DB       = 'gesco'
        POSTGRES_HOST     = credentials('DB_HOST_ID')
        POSTGRES_PORT     = credentials('DB_PORT_ID')
        DATABASE_URL      = "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

        // Variables Frontend
        FRONTEND_URL      = 'http://gesco.itdcmada.com'
        VITE_BASE_URL     = 'http://gesco-api.itdcmada.com'
        SECRET_KEY        = 'secret-gesco'

        // Variables Google
        GOOGLE_CLIENT_ID  = 'your-google-client-id'
        GOOGLE_CLIENT_SECRET = 'your-google-client-secret'
        GOOGLE_REDIRECT_URI = 'http://gesco-api.itdcmada.com/api/auth/google/callback'
    }

    stages {
        stage('Build') {
            steps {
                sh 'docker-compose build'
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // CrÃ©er un fichier .env temporaire
                    sh '''
                        cat > .env <<EOF
DATABASE_URL=${DATABASE_URL}

FRONTEND_URL=${FRONTEND_URL}
VITE_BASE_URL=${VITE_BASE_URL}
SECRET_KEY=${SECRET_KEY}

GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}

EOF
                    '''

                    // Lancer docker-compose avec .env
                    sh 'docker-compose --env-file .env up -d'

                    // Nettoyer le fichier .env temporaire
                    sh 'rm .env'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
