pipeline {
    agent any

    environment {
        CONTAINER_NAME    = 'rsu-backend'
        IMAGE_NAME        = 'rsu-backend'
        IMAGE_TAG         = "${BUILD_NUMBER}"

        // Variables PostgreSQL
        POSTGRES_USER     = credentials('DB_USER_ID')
        POSTGRES_PASSWORD = credentials('DB_PASSWORD_ID')
        POSTGRES_DB       = 'rsu'
        POSTGRES_HOST     = credentials('DB_HOST_ID')
        POSTGRES_PORT     = credentials('DB_PORT_ID')

        // Variables Redis (utilisation directe de docker-compose)
        REDIS_HOST        = 'redis'
        REDIS_PORT        = '6379'
        REDIS_DB          = '0'

        // Variables Mail
        MAIL_USERNAME     = 'nonekon263@gmail.com'
        MAIL_PASSWORD     = 'kobh vqts uejy phvu'  // ⚠️ À mettre en credentials Jenkins idéalement
        MAIL_FROM         = 'nonekon263@gmail.com'
        MAIL_PORT         = '587'
        MAIL_SERVER       = 'smtp.gmail.com'
    }

    stages {
        stage('Build') {
            steps {
                sh 'docker-compose build'
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Créer un fichier .env temporaire
                    sh '''
                        cat > .env <<EOF
POSTGRES_USER=${POSTGRES_USER}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
POSTGRES_DB=${POSTGRES_DB}
POSTGRES_HOST=${POSTGRES_HOST}
POSTGRES_PORT=${POSTGRES_PORT}

REDIS_HOST=${REDIS_HOST}
REDIS_PORT=${REDIS_PORT}
REDIS_DB=${REDIS_DB}

MAIL_USERNAME=${MAIL_USERNAME}
MAIL_PASSWORD=${MAIL_PASSWORD}
MAIL_FROM=${MAIL_FROM}
MAIL_PORT=${MAIL_PORT}
MAIL_SERVER=${MAIL_SERVER}
EOF
                    '''

                    // Lancer docker-compose avec .env
                    sh 'docker-compose --env-file .env up -d'

                    // Nettoyer le fichier .env temporaire
                    sh 'rm .env'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
